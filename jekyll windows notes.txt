19:41 2/21/2019
using video:
https://www.youtube.com/watch?v=LfP7Y9Ja6Qc&index=3&list=PLLAZ4kZ9dFpOPV5C5Ay0pHaa0RJFhcmcB
(third video in a long playlist, 1st was "what is jekyll" and second was for mac os so i skipped it


first thing is the "ruby gems package manager"

I downloaded the "without devkit" edition, 2.5.1-1 x64
https://rubyinstaller.org/downloads/

the video says to let it associate rb and rbw extensions so i'll let it

console window opens after installing it
video says to install all three in order
run 1 and uncheck "run msys2 64bit now" - okay that's proably obvious
i'm doing on this guest wifi on my toughbook so it ended up taking a while...
3:00 min in


run 2
updates all the ruby related packages
apparently this is installing linux/unix libraries and pacman/bash/mintty etc on to system

run 3
mingw etc development toolchain

open cmd prompt
--> confirm everything is working correctly
ruby -v confirms rub is installed and prints version
gem -v does same for gem installed/version printout

next:
gem install jekyll bundler 
[I changed to my local drive repo to run this command, not sure if that was necessary: 
no additional files in that folder so not necessary]

should say "2 gems installed" -- actually it came 26 gems installed. maybe i just misheard that.

jekyll -v should print out something like:
jekyll 3.6.0 [v3.8.5 in my case. it has been 18 months since the video]

------------------------------------------------------

tutorial part 4 for video series above
this is how to 

jekyll new [name of site]
e.g.
jekyll new my-new-blog

creates a bunch default files or "scaffolding"
for this part:
ended up creating repo on github first called "jekyll-windows-test"
then cloning that to local drive in my repo folder - this is an empty folder with just .git subfolder 
and a readme.md file
then at CMD shell one level up/in repo folder ran the command with "--force" to make it create the 
scaffholding in this existing repo folder
"jekyll new jekyll-windows-test --force"
the --force is to make it work into a non-empty folder
and it did work as far as i can tell




bundle exec jekyll serve
for first time running it
after that just 
"jekyll serve"
can see site at localhost:4000
this worked exactly as described
just a web server with a "ctrl+c to stop server" message

in directory structure
there is _posts folder
also
_site
which seems to be the "root" of the site - finished/final version

_config.yml file - the settigns for jekyll web site
atrributes for site
also "gemfile" - used to store depencies for site
the "minima" is a reference to default theme
can also specify plugins etc

------------------------------------------------------

tutorial part 5 for video series above

"front matter" in jekyll

contains information about pages
like title or date written
information about each of pages

for instance:
---
layout: post
title:  "Welcome to Jekyll!"
date:   2019-02-21 20:45:05 -0800
categories: jekyll update
---
in the .markdown file
can be used to get information etc.

------------------------------------------------------

tutorial part 6 for video series above

this part 6 convers create blog posts in the _posts folder
the naming convention comes int he form:
2019-02-21-welcome-to-jekyll.markdown
can also just use .html instead of markdown - either works
the most important part is including the date at the front then the title for the rest of the title
and apparently both .md and .markdown work for extensions
I find out by experimenting that setting the file to a future date doesn't auto-show up. 
Although perhaps it would eventually show up on the main page as an entry

the first step for any new post file should be adding the "front matter" inside those three dashes ---
above/below it
I gather this is a lot like meta data only it matters quite a lot to tell jekyll how to display the content
layout: post
is for posts - custom layouts can be created/used though
The 
title:
front matter over rides the title of the entry. By default it would use the info from the file's name
for instance the file
2019-02-22-first-example-blogpost.md
would show up with the title "First Example Blogpost"
without that title: entry
while 
title:  "Welcome to my newest blog"
would change the title to "Welcome to my newest blog"
These are "front matter variables"

subfolders can be created under the _posts folder

------------------------------------------------------

tutorial part 7

all about "drafts"

create a "_drafts" folder - same level as the _posts folder

any md file in that _drafts folder will be a work in progress
won't show up directly in "posts" section of page
to see these pages use the alt jekyl server command:

jekyll serve --draft

note: both "serve" and "server" actually should work

Even though I got this working on the win 7 toughbook correctly, i can't seem to get it working on 
win 10/alienware with the normal "jekyll server"
It does seem towrk with the entire 

bundle exec jekyll server --draft
as well as 
bundle exec jekyll server 

And this does work: write a draft in the _drafts with normal front matter with layout: post
running the above with --draft will show the draft as an option 
and will be hidden without that --draft option
naming drafts does not have to be in the year-months-day format file name
but would have have to be named that way when moved the _posts folder

------------------------------------------------------

tutorial part 8

"posts" versus "pages"

such as about page

create new file on "root" of site e.g. not in _posts folder or anything
and add some frontmatter with the standard
front/end ---
can use layout: "page" instead of post
and have to specify title since it's not necesarily pre-defined
and that title actually did show up to the right of "about" in the main 
site page

------------------------------------------------------

tutorial part 9

all about "permalinks"

notes that the 
_site
folder stores finished complete site
it's a folder structure based on page file names and front matter
in the sample URL
http://127.0.0.1:4000/jekyll/update/2019/02/21/welcome-to-jekyll.html
the "update" is the category defined in the front matter
and the HTML file is defined by the title
and the data stamp is also defined
so a permalink definition would give it a more static location that wouldn't be
broken if the category or another detail were changed later

can define a permalink in the front matter with something such as
permalink: "/my-new-url/"
this will override the generated URL as mentioned

can also use
permalink: /:categories
to use a different variable

or /categories:/:year/:month:/:day/:title
and can also switch these variable around
as well as using a custom extension like title.html for instance

------------------------------------------------------

tutorial part 10

"front matter defaults"

defined in config.yaml file

a new post file won't have any formatting etc. without the 
front matter between the --- lines
in order define some constants that will be consistent, can use 
the defaults in the
_config.yml
file

start with the 
defaults:
i changed my _config.yml file to reflect changes below,
must stop/start jekyll server 
defaults:
  -
    scope:
      path: ""
      values:
        layout: "post"

The above was making the jekyll server complain of 
invalid values, but below for whatever reason did work:

defaults:
  -
    scope:
      path: "" # an empty string here means all files in the project
      # type: "posts" # previously `post` in Jekyll 2.2.
    values:
      layout: "post"
      #type: posts # theoretically can use this value down here for non-posts like about

above works even better since it uses that post name portion of the file name 
to insert a page title

-------
hypothetical downside to doing it this way is that non-post pages like about.md
will go back to not having a layout defintion but instead posts layout instead of 
page layout

------------------------------------------------------

tutorial part 11

all about themes

default theme is minima

controlled in _config.yml
also the "gemfile" file

ruby gems is good place to start for themes

search "jekyll-theme"
in the sample theme called "jekyll-theme-hacker"
https://github.com/pages-themes/hacker
no various layouts are defined, only a "default.html"
actually since this video apparently there's a "post.html"
in any case had to modify that layout: line to say "default"
instead of page or post etc

I verified this hacker theme was installed with command:
bundle info jekyll-theme-hacker

if you don't go in and change that layout: line in the front matter 
the page will come up blank when refreshed

in gem file added line:
  gem "jekyll-theme-hacker"

and in the _config.yml file
commented out current theme line and put in line:
theme: jekyll-theme-hacker

